(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{558:function(s,t,a){"use strict";a.r(t);var e=a(11),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("Scalar functions operate on one or more values and then return a single value. They can be used wherever a value expression is valid.")]),s._v(" "),a("p",[s._v("Scalar functions are divided into serval kinds.")]),s._v(" "),a("h3",{attrs:{id:"trigonometric-functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#trigonometric-functions"}},[s._v("#")]),s._v(" Trigonometric Functions")]),s._v(" "),a("p",[s._v("All trigonometric functions perform a calculation, operate on a single numeric value and then return a single numeric value.")]),s._v(" "),a("p",[s._v("For values outside the domain, "),a("code",[s._v("NaN")]),s._v(" is returned.")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("SIN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nSINH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nASIN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nASINH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nCOS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nCOSH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nACOS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nACOSH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nTAN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nTANH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nATAN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nATANH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h3",{attrs:{id:"arithmetic-functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arithmetic-functions"}},[s._v("#")]),s._v(" Arithmetic Functions")]),s._v(" "),a("p",[s._v("The following functions perform a calculation, operate on a single numeric value and then return a single numeric value.")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("ABS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("Absolute value.")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("CEIL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("The function application "),a("code",[s._v("CEIL(n)")]),s._v(" returns the least integer not less than "),a("code",[s._v("n")]),s._v(".")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("FLOOR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("The function application "),a("code",[s._v("FLOOR(n)")]),s._v(" returns the greatest integer not greater than "),a("code",[s._v("n")]),s._v(".")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ROUND")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("The function application "),a("code",[s._v("ROUND(n)")]),s._v(" returns the nearest integer to "),a("code",[s._v("n")]),s._v(" the even integer if "),a("code",[s._v("n")]),s._v(" is equidistant between two integers.")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("SQRT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("The square root of a numeric value.")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("LOG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nLOG2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nLOG10"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nEXP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("SIGN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("The function application "),a("code",[s._v("SIGN(n)")]),s._v(" returns the sign of a numeric value as an Integer.")]),s._v(" "),a("ul",[a("li",[s._v("returns "),a("code",[s._v("-1")]),s._v(" if "),a("code",[s._v("n")]),s._v(" is negative")]),s._v(" "),a("li",[s._v("returns "),a("code",[s._v("0")]),s._v(" if "),a("code",[s._v("n")]),s._v(" is exact zero")]),s._v(" "),a("li",[s._v("returns "),a("code",[s._v("1")]),s._v(" if "),a("code",[s._v("n")]),s._v(" is positive")]),s._v(" "),a("li",[s._v("returns "),a("code",[s._v("null")]),s._v(" if "),a("code",[s._v("n")]),s._v(" is exact "),a("code",[s._v("null")])])]),s._v(" "),a("h3",{attrs:{id:"predicate-functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#predicate-functions"}},[s._v("#")]),s._v(" Predicate Functions")]),s._v(" "),a("p",[s._v("Function applications of the form "),a("code",[s._v("IS_A(x)")]),s._v(" where "),a("code",[s._v("A")]),s._v(" is the name of a type returns "),a("code",[s._v("TRUE")]),s._v(" if the argument "),a("code",[s._v("x")]),s._v(" is of type "),a("code",[s._v("A")]),s._v(", otherwise "),a("code",[s._v("FALSE")]),s._v(".")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("IS_INT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("val_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nIS_FLOAT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("val_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nIS_NUM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("val_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nIS_BOOL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("val_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nIS_STR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("val_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nIS_MAP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("val_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nIS_ARRAY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("val_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nIS_DATE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("val_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nIS_TIME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("val_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h3",{attrs:{id:"string-functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-functions"}},[s._v("#")]),s._v(" String Functions")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("TO_STR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("val_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("Convert a value expression to a readable string.")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("TO_LOWER"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("Convert a string to lower case, using simple case conversion.")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("TO_UPPER"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("Convert a string to upper case, using simple case conversion.")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("TRIM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("Remove leading and trailing white space from a string.")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("LEFT_TRIM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("Remove leading white space from a string.")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("RIGHT_TRIM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("Remove trailing white space from a string.")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("REVERSE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("Reverse the characters of a string.")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("STRLEN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("Returns the number of characters in a string.")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("TAKE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("The function application "),a("code",[s._v("TAKE(n, s)")]),s._v(" returns the prefix of the string of length "),a("code",[s._v("n")]),s._v(".")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("TAKEEND"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("The function application "),a("code",[s._v("TAKEEND(n, s)")]),s._v(" returns the suffix remaining after taking "),a("code",[s._v("n")]),s._v(" characters from the end of the string.")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DROP")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("The function application "),a("code",[s._v("DROP(n, s)")]),s._v(" returns the suffix of the string after the first "),a("code",[s._v("n")]),s._v(" characters, or the empty string if n is greater than the length of the string.")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("DROPEND"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("The function application "),a("code",[s._v("DROPEND(n, s)")]),s._v(" returns the prefix remaining after dropping "),a("code",[s._v("n")]),s._v(" characters from the end of the string.")]),s._v(" "),a("h3",{attrs:{id:"null-functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#null-functions"}},[s._v("#")]),s._v(" Null Functions")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("IFNULL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("val_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" val_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("The function application "),a("code",[s._v("IFNULL(x, y)")]),s._v(" returns "),a("code",[s._v("y")]),s._v(" if "),a("code",[s._v("x")]),s._v(" is "),a("code",[s._v("NULL")]),s._v(", otherwise "),a("code",[s._v("x")]),s._v(".")]),s._v(" "),a("p",[s._v("When the argument type is a complex type, for example, "),a("code",[s._v("ARRAY")]),s._v(" or "),a("code",[s._v("MAP")]),s._v(", the contents of the complex type are not inspected.")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("NULLIF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("val_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" val_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("The function application "),a("code",[s._v("NULLIF(x, y)")]),s._v(" returns "),a("code",[s._v("NULL")]),s._v(" if "),a("code",[s._v("x")]),s._v(" is equal to "),a("code",[s._v("y")]),s._v(", otherwise "),a("code",[s._v("x")]),s._v(".")]),s._v(" "),a("p",[s._v("When the argument type is a complex type, for example, "),a("code",[s._v("ARRAY")]),s._v(" or "),a("code",[s._v("MAP")]),s._v(", the contents of the complex type are not inspected.")]),s._v(" "),a("h3",{attrs:{id:"time-and-date-functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#time-and-date-functions"}},[s._v("#")]),s._v(" Time and Date Functions")]),s._v(" "),a("h4",{attrs:{id:"time-format"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#time-format"}},[s._v("#")]),s._v(" Time Format")]),s._v(" "),a("p",[s._v("Formats are analogous to "),a("a",{attrs:{href:"https://man7.org/linux/man-pages/man3/strftime.3.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("strftime"),a("OutboundLink")],1),s._v(".")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("Format Name")]),s._v(" "),a("th",[s._v("Raw Format String")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("simpleDateFormat")]),s._v(" "),a("td",[s._v('"%Y-%m-%d %H:%M:%S"')])]),s._v(" "),a("tr",[a("td",[s._v("iso8061DateFormat")]),s._v(" "),a("td",[s._v('"%Y-%m-%dT%H:%M:%S%z"')])]),s._v(" "),a("tr",[a("td",[s._v("webDateFormat")]),s._v(" "),a("td",[s._v('"%a, %d %b %Y %H:%M:%S GMT"')])]),s._v(" "),a("tr",[a("td",[s._v("mailDateFormat")]),s._v(" "),a("td",[s._v('"%a, %d %b %Y %H:%M:%S %z"')])])])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("DATETOSTRING"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("val_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("Formatting seconds since 1970-01-01 00:00:00 UTC to string in GMT with the second string argument as the given format name.")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("STRINGTODATE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("Formatting string to seconds since 1970-01-01 00:00:00 UTC in GMT with the second string argument as the given format name.")]),s._v(" "),a("h3",{attrs:{id:"array-functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#array-functions"}},[s._v("#")]),s._v(" Array Functions")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("ARRAY_CONTAINS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arr_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" val_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("Given an array, checks if the search value is contained in the array (of the same type).")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("ARRAY_DISTINCT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arr_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("Returns an array of all the distinct values, including "),a("code",[s._v("NULL")]),s._v(" if present, from the input array. The output array elements are in order of their first occurrence in the input.")]),s._v(" "),a("p",[s._v("Returns "),a("code",[s._v("NULL")]),s._v(" if the argument is "),a("code",[s._v("NULL")]),s._v(".")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("ARRAY_EXCEPT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arr_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" arr_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("Returns an array of all the distinct elements from an array, except for those also present in a second array. The order of entries in the first array is preserved but duplicates are removed.")]),s._v(" "),a("p",[s._v("Returns "),a("code",[s._v("NULL")]),s._v(" if either input is "),a("code",[s._v("NULL")]),s._v(".")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("ARRAY_INTERSECT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arr_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" arr_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("Returns an array of all the distinct elements from the intersection of both input arrays. If the first list contains duplicates, so will the result. If the element is found in both the first and the second list, the element from the first list will be used.")]),s._v(" "),a("p",[s._v("Returns "),a("code",[s._v("NULL")]),s._v(" if either input is "),a("code",[s._v("NULL")]),s._v(".")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("ARRAY_UNION"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arr_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" arr_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("Returns the array union of the two arrays. Duplicates, and elements of the first list, are removed from the second list, but if the first list contains duplicates, so will the result.")]),s._v(" "),a("p",[s._v("Returns "),a("code",[s._v("NULL")]),s._v(" if either input is "),a("code",[s._v("NULL")]),s._v(".")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("ARRAY_JOIN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arr_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nARRAY_JOIN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arr_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("Creates a flat string representation of all the primitive elements contained in the given array. The elements in the resulting string are separated by the chosen delimiter, which is an optional parameter that falls back to a comma "),a("code",[s._v(",")]),s._v(".")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("ARRAY_LENGTH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arr_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("Returns the length of a finite list.")]),s._v(" "),a("p",[s._v("Returns "),a("code",[s._v("NULL")]),s._v(" if the argument is "),a("code",[s._v("NULL")]),s._v(".")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("ARRAY_MAX"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arr_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("Returns the maximum value from within a given array of elements.")]),s._v(" "),a("p",[s._v("Returns "),a("code",[s._v("NULL")]),s._v(" if the argument is "),a("code",[s._v("NULL")]),s._v(".")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("ARRAY_MIN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arr_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("Returns the minimum value from within a given array of elements.")]),s._v(" "),a("p",[s._v("Returns "),a("code",[s._v("NULL")]),s._v(" if the argument is "),a("code",[s._v("NULL")]),s._v(".")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("ARRAY_REMOVE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arr_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" val_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("Removes all elements from the input array equal to the second argument.")]),s._v(" "),a("p",[s._v("Returns "),a("code",[s._v("NULL")]),s._v(" if the first argument is "),a("code",[s._v("NULL")]),s._v(".")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("ARRAY_SORT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arr_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("Sort an array. Elements are arranged from lowest to highest, keeping duplicates in the order they appeared in the input.")]),s._v(" "),a("p",[s._v("Returns "),a("code",[s._v("NULL")]),s._v(" if the first argument is "),a("code",[s._v("NULL")]),s._v(".")])])}),[],!1,null,null,null);t.default=n.exports}}]);